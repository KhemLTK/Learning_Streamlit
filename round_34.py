
import streamlit as st
import gspread
import json
from google.oauth2.service_account import Credentials

st.set_page_config(page_title="Brush Entry to Google Sheet", layout="wide")

st.title("üìä ‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÅ‡∏õ‡∏£‡∏á‡∏ñ‡πà‡∏≤‡∏ô")

st.header("üìù ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏á Sheet8 ‡∏ó‡∏µ‡πà‡πÄ‡∏ã‡∏•‡∏•‡πå H1 ‡πÅ‡∏•‡∏∞ Brush Upper/Lower")

# ‡∏Å‡∏£‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á
hours = st.number_input("üïí ‡∏Å‡∏£‡∏≠‡∏Å‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á", min_value=0.0, step=1.0)

# ‡∏Å‡∏£‡∏≠‡∏Å‡∏Ñ‡πà‡∏≤‡∏Ç‡∏≠‡∏á Brush Upper (32 ‡∏Ñ‡πà‡∏≤)
st.subheader("üî∫ ‡∏Å‡∏£‡∏≠‡∏Å‡∏Ñ‡πà‡∏≤ Brush Upper (32 ‡∏Ñ‡πà‡∏≤)")
cols_upper = st.columns(4)
upper_values = []
for i in range(32):
    with cols_upper[i % 4]:
        val = st.number_input(f"‡∏ï‡∏±‡∏ß‡∏ó‡∏µ‡πà {i + 1} (U)", key=f"upper_{i}")
        upper_values.append(val)

# ‡∏Å‡∏£‡∏≠‡∏Å‡∏Ñ‡πà‡∏≤‡∏Ç‡∏≠‡∏á Brush Lower (32 ‡∏Ñ‡πà‡∏≤)
st.subheader("üîª ‡∏Å‡∏£‡∏≠‡∏Å‡∏Ñ‡πà‡∏≤ Brush Lower (32 ‡∏Ñ‡πà‡∏≤)")
cols_lower = st.columns(4)
lower_values = []
for i in range(32):
    with cols_lower[i % 4]:
        val = st.number_input(f"‡∏ï‡∏±‡∏ß‡∏ó‡∏µ‡πà {i + 1} (L)", key=f"lower_{i}")
        lower_values.append(val)

# ‡πÇ‡∏´‡∏•‡∏î credentials ‡∏à‡∏≤‡∏Å secrets
try:
    service_account_info = st.secrets["gcp_service_account"]
    creds = Credentials.from_service_account_info(service_account_info)
    gc = gspread.authorize(creds)

    # URL ‡∏Ç‡∏≠‡∏á Google Sheet
    spreadsheet_url = "https://docs.google.com/spreadsheets/d/1SOkIH9jchaJi_0eck5UeyUR8sTn2arndQofmXv5pTdQ/edit"
    worksheet = gc.open_by_url(spreadsheet_url).worksheet("Sheet8")

    if st.button("üì• ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡∏á Google Sheet"):
        try:
            worksheet.update("H1", [[hours]])
            for i in range(32):
                worksheet.update(f"C{i+3}", [[upper_values[i]]])
                worksheet.update(f"F{i+3}", [[lower_values[i]]])
            st.success("‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß")
        except Exception as e:
            st.error(f"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")

except Exception as e:
    st.error(f"‡πÇ‡∏´‡∏•‡∏î credentials ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à: {e}")
